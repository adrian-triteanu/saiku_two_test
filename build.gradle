apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

version = '1.0'
sourceCompatibility = 1.7

defaultTasks 'clean', 'cleanEclipse', 'eclipse', 'war'

/*
 * Automatically download Saiku and Mondrian
 */
task downloadSaiku(type: Exec) {
    commandLine 'git', 'clone', 'https://github.com/OSBI/saiku.git', '--single-branch', '-b', '2.6.x', 'saiku'
}

task downloadSaikuUI(type: Exec) {
    commandLine 'git', 'clone', 'https://github.com/OSBI/saiku-ui.git', '--single-branch', '-b', '2.6.x', 'saiku-ui'
}

task downloadSaikuQuery(type: Exec) {
    commandLine 'git', 'clone', 'https://github.com/pstoellberger/saiku-query.git', 'saiku-query'
}

task downloadMondrian(type: Exec) {
    commandLine 'git', 'clone', 'https://github.com/pentaho/mondrian.git', '--single-branch', '-b', '9.1.0.0-RC', 'mondrian'
}

/**
 * Copy some patched files into the downloaded sources
 */
task applySaikuUIPatches(type: Copy) {
    from 'patches/saiku-ui'
    into 'saiku-ui'
    outputs.upToDateWhen { false }
}

/**
 * Copy some patched files into the downloaded sources
 */
task applySaikuPatches(type: Copy) {
    from 'patches/saiku'
    into 'saiku'
    outputs.upToDateWhen { false }
}

/**
 * Update some settings
 */
task updateSettings(type: Exec) {
    commandLine 'patches/scripts/update_settings.sh'
    outputs.upToDateWhen { false }
}

/**
 * Remove some unecessary code
 */
task removeCode(type: Exec) {
    commandLine 'patches/scripts/remove_code.sh'
    outputs.upToDateWhen { false }
}

if (!file('saiku').exists())       applySaikuPatches.dependsOn downloadSaiku
if (!file('saiku-ui').exists())    applySaikuUIPatches.dependsOn downloadSaikuUI
if (!file('saiku-ui').exists())    updateSettings.dependsOn downloadSaikuUI
if (!file('saiku-query').exists()) applySaikuPatches.dependsOn downloadSaikuQuery
// if (!file('mondrian').exists())    applySaikuPatches.dependsOn downloadMondrian  // optional

compileJava.dependsOn applySaikuPatches
compileJava.dependsOn applySaikuUIPatches
compileJava.dependsOn updateSettings
compileJava.dependsOn removeCode
removeCode.dependsOn applySaikuUIPatches


/**
 * Define the repository locations to use.
 */
repositories {
    mavenCentral()
    maven {
        url "http://nexus.pentaho.org/content/groups/omni"
    }
    maven {
        url "http://clojars.org/repo/"
    }
}

/**
 * Define the source directories to compile
 */
sourceSets {
    main {
        java {
            srcDir 'saiku-query/src/main/java'
            srcDir 'saiku/saiku-core/saiku-olap-util/src/main/java'
            srcDir 'saiku/saiku-core/saiku-service/src/main/java'
            srcDir 'saiku/saiku-core/saiku-web/src/main/java'
            srcDir 'patches/mondrian/src/main'
            srcDir 'src/main/java'
        }

        resources {
            srcDir 'saiku/saiku-core/saiku-service/src/main/resources'
            srcDir 'saiku/saiku-core/saiku-web/src/main/resources'
            srcDir 'src/main/resources'
        }
    }
}

/**
 * Dependencies to external jars. These are the merged dependencies from the
 * Mondrian ivy.xml and the Saiku pom.xml files.
 * Dependencies to enunciate and iText were removed
 */
dependencies {

    // mondrian
    compile 'pentaho:mondrian:9.1.0.0-188'

    // saiku dependencies
    compile 'avalon-framework:avalon-framework:4.1.5'
    compile 'cglib:cglib:2.2'
    compile 'com.sun.jersey.contribs:jersey-multipart:1.11'
    compile 'com.sun.jersey.contribs:jersey-spring:1.11'
    compile 'com.sun.jersey:jersey-core:1.11'
    compile 'com.sun.jersey:jersey-server:1.11'
    compile 'commons-collections:commons-collections:3.2'
    compile 'commons-dbcp:commons-dbcp:1.2.2'
    compile 'commons-httpclient:commons-httpclient:20020423'
    compile 'commons-math:commons-math:1.2'
    compile 'commons-pool:commons-pool:1.4'
    compile 'commons-vfs:commons-vfs:1.0'
    compile 'hsqldb:hsqldb:1.8.0.10'
    compile 'javax.servlet:jstl:1.2'
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile 'log4j:log4j:1.2.14'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.poi:poi-ooxml:3.7'
    compile 'org.apache.poi:poi:3.7'
    compile 'org.apache.xmlgraphics:batik-codec:1.7'
    compile 'org.apache.xmlgraphics:batik-transcoder:1.7'
    compile 'org.apache.xmlgraphics:xmlgraphics-commons:1.2'
    compile 'org.codehaus.enunciate:enunciate-core-annotations:1.28'
    compile 'org.codehaus.enunciate:enunciate-jersey-rt:1.28'
    compile 'org.codehaus.enunciate:enunciate-rt:1.28'
    compile 'org.codehaus.jackson:jackson-core-asl:1.7.4'
    compile 'org.codehaus.jackson:jackson-jaxrs:1.7.4'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.7.4'
    compile 'org.codehaus.jackson:jackson-xc:1.7.4'
    compile 'org.codehaus.jettison:jettison:1.2'
    compile 'org.jdom:jdom:1.1'
    compile 'org.slf4j:slf4j-api:1.6.1'
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'org.slf4j:jul-to-slf4j:1.6.1'
    compile 'org.springframework.security:spring-security-config:3.0.3.RELEASE'
    compile 'org.springframework.security:spring-security-core:3.0.3.RELEASE'
    compile 'org.springframework.security:spring-security-ldap:3.0.3.RELEASE'
    compile 'org.springframework.security:spring-security-taglibs:3.0.3.RELEASE'
    compile 'org.springframework:spring-aop:3.2.14.RELEASE'
    compile 'org.springframework:spring-beans:3.2.14.RELEASE'
    compile 'org.springframework:spring-context-support:3.2.14.RELEASE'
    compile 'org.springframework:spring-context:3.2.14.RELEASE'
    compile 'org.springframework:spring-core:3.2.14.RELEASE'
    compile 'org.springframework:spring-webmvc:3.2.14.RELEASE'
    compile 'rhino:js:1.7R2'
    compile 'stax:stax-api:1.0.1'
    compile 'xml-apis:xml-apis:2.0.2'

    // database drivers
    compile "monetdb:monetdb-jdbc:2.13"
    compile 'org.postgresql:postgresql:9.4-1201-jdbc41'

    // own dependencies
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.httpcomponents:fluent-hc:4.5'

    providedCompile 'javax.servlet:jsp-api:2.0'
    providedCompile 'javax.servlet:servlet-api:2.4'
}

/**
 * Manifest for the war file
 */
war {
    archiveName 'cubes.war'
    destinationDir file('.')

    manifest {
        attributes 'Implementation-Title': 'Monsai', 'Implementation-Version': version
    }

    from 'saiku-ui'
    from('saiku/saiku-webapp/src/main/webapp') {
        include '**/log4j.*'
        include '**/saiku.properties'
    }
    from('saiku/saiku-webapp/src/main/web/saiku-beans.xml') {
        into('WEB-INF/classes')
    }

    outputs.upToDateWhen { false }
}

/**
 * Set additional eclipse properties
 */
eclipse {
    classpath {
        downloadSources = true
        file.withXml {
            it.asNode().each {
                if (it.@kind == 'src' && !it.@path.startsWith('src')) {
                    it.appendNode('attributes').appendNode('attribute', [name: 'ignore_optional_problems', value: 'true'])
                }
            }
        }
    }
}
